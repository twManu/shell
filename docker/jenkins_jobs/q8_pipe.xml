<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.41">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>build whole q8 project daily</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>3</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>H(0-10) 0 * * *</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.94">
    <script>pipeline {
    agent any
    environment {
        date = sh(returnStdout: true, script: &apos;date +%Y%m%d&apos;).trim()
        time = sh(returnStdout: true, script: &apos;date +%H%M&apos;).trim()
        job8b = &quot;q8_buildroot&quot;
        job8c = &quot;q8_client&quot;
        job8s = &quot;q8_server&quot;
    }
    stages {
        stage(&apos;build client&apos;) {
            steps {
                script {
                    def br = build(job: &quot;${job8c}&quot;)
                }
            }
        } //build client
        stage(&apos;build br1&apos;) {
            steps {
                script {
                    def br = build(
                        job: &quot;${job8b}&quot;,
                        parameters:[
                            booleanParam(name:&apos;cleanBeforeBuild&apos;, value:true),
                            string(name: &apos;stage&apos;, value: &quot;br1&quot;),
                            string(name: &apos;target&apos;, value: &quot;br&quot;)
                        ]
                    )
                }
            }
        } //br1
        stage(&apos;build br&apos;) {
            steps {
                script {
                    def br = build(
                        job: &quot;${job8b}&quot;,
                        parameters:[
                            booleanParam(name:&apos;cleanBeforeBuild&apos;, value:false),
                            string(name: &apos;stage&apos;, value: &quot;br&quot;),
                            string(name: &apos;target&apos;, value: &quot;br&quot;)
                        ]
                    )
                }
            }
        } //br
        stage(&apos;build server&apos;) {
            steps {
                script {
                    def br = build(job: &quot;${job8s}&quot;)
                }
            }
        } //build server
    } //stages
    post() {
        always {
            cleanWs()
        }
    }
} //pipeline</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>